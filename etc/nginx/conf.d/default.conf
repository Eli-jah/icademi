gzip on;
gzip_min_length 1024;
gzip_comp_level 2;
gzip_types text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml application/x-httpd-php image/jpeg image/gif image/png font/ttf font/otf image/svg+xml;
gzip_vary on;
gzip_disable "msie6";

map $http_upgrade $connection_upgrade {
    ''          close;
    # default     keep-alive;
    default     upgrade;
    'websocket' upgrade;
}

upstream websocket {
    server app:9501 weight=5 max_fails=3 fail_timeout=30s;
    keepalive 16;
}

server
{
    # listen 80;
    # listen [::]:80;
	# listen 443 ssl http2;
    # server_name test.icademi.com;
    listen 80;
    listen [::]:80;
    server_name localhost 127.0.0.1;
    index index.php index.html index.htm default.php default.htm default.html;
    # root /usr/share/nginx/html/public;
    root /var/www/html/public;

    #SSL-START SSL相关配置，请勿删除或修改下一行带注释的404规则
    #error_page 404/404.html;
    #HTTP_TO_HTTPS_START
    # if ($server_port !~ 443){
    #     rewrite ^(/.*)$ https://$host$1 permanent;
    # }
    #HTTP_TO_HTTPS_END
    # ssl_certificate    /www/server/panel/vhost/cert/www.yunfanshuzi.com/fullchain.pem;
    # ssl_certificate_key    /www/server/panel/vhost/cert/www.yunfanshuzi.com/privkey.pem;
    # ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    # ssl_ciphers EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    # ssl_prefer_server_ciphers on;
    # ssl_session_cache shared:SSL:10m;
    # ssl_session_timeout 10m;
    # add_header Strict-Transport-Security "max-age=31536000";
    # error_page 497  https://$host$request_uri;

    #SSL-END

    #ERROR-PAGE-START  错误页配置，可以注释、删除或修改
    #error_page 404 /404.html;
    #error_page 502 /502.html;
    #ERROR-PAGE-END

    #PHP-INFO-START  PHP引用配置，可以注释或修改
    #include enable-php-71.conf;
    #PHP-INFO-END

    #REWRITE-START URL重写规则引用,修改后将导致面板设置的伪静态规则失效
    #include /www/server/panel/vhost/rewrite/www.yunfanshuzi.com.conf;
    #REWRITE-END

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    # Http and WebSocket are concomitant, Nginx identifies them by "location"
    # !!! The location of WebSocket is "/ws"
    # Javascript: var ws = new WebSocket("ws://laravels.com/ws");
    # location =/ws {
    location ^~ /ws {
        # proxy_pass http://127.0.0.1:9501;
        # proxy_pass app:9501;
        proxy_pass http://websocket;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_connect_timeout 120s;
        proxy_redirect off;
        # Allow the use of websockets
        # proxy_connect_timeout 60s;
        # proxy_send_timeout 60s;
        # proxy_read_timeout 120s;
        # proxy_http_version 1.1;
        # proxy_set_header Connection "";
        # proxy_set_header Connection "upgrade";
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Real-PORT $remote_port;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header Host $host;
        # proxy_set_header Host $http_host;
        # proxy_set_header Scheme $scheme;
        # proxy_set_header Server-Protocol $server_protocol;
        # proxy_set_header Server-Name $server_name;
        # proxy_set_header Server-Addr $server_addr;
        # proxy_set_header Server-Port $server_port;
        # Allow the use of websockets
        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Real-PORT $remote_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        # proxy_set_header Host $http_host;
        proxy_set_header Scheme $scheme;
        # proxy_set_header Server-Protocol $server_protocol;
        proxy_set_header Server-Name $server_name;
        proxy_set_header Server-Addr $server_addr;
        # proxy_set_header Server-Port $server_port;
        proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection 'upgrade';
        proxy_set_header Connection $connection_upgrade;
        # proxy_cache_bypass $http_upgrade;
    }

    location ~ ^/apidoc/ {
        index index.html;
        # root /usr/share/nginx/html/public;
        root /var/www/html/public;
    }

    # Forbidden
    location ~ ^/(apidoc\.json|\.user\.ini|\.htaccess|\.git|\.svn|\.project|LICENSE|README\.md|Dockerfile|.*\.dockerfile|docker-compose\.yml) {
        return 404;
    }

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php(/|$) {
    # location ~ [^/]\.php(/|$) {
        root /var/www/html/public;
        # try_files $uri $uri/ /index.php?$query_string;
        # fastcgi_pass   http://127.0.0.1:9000;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass    app:9000;
        fastcgi_index   index.php;
        fastcgi_param   SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include         fastcgi_params;
        # fastcgi_split_path_info ^(.+\.php)(/.*)$;
        # fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        # include        fastcgi_params;
    }

    # 禁止访问的文件或目录
    # location ~ ^/(\.user.ini|\.htaccess|\.git|\.svn|\.project|LICENSE|README.md) {
        # return 404;
    # }

    # 一键申请SSL证书验证目录相关设置
    location ~ \.well-known {
        allow all;
    }

    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$ {
        expires     30d;
        error_log   /dev/null;
        access_log  /dev/null;
    }

    location ~ .*\.(js|css)?$ {
        expires     12h;
        error_log   /dev/null;
        access_log  /dev/null;
    }

    access_log  /var/log/nginx/default.access.log main;
    error_log   /var/log/nginx/default.error.log error;
}